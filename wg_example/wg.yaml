---
# Source: wireguard/templates/common.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wg-wireguard
  namespace: vpn
  labels:
    helm.sh/chart: wireguard-1.1.0
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/instance: wg
    app.kubernetes.io/version: "1.0.20210424"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/instance: wg
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/instance: wg
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: vpn
                    operator: Exists
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      initContainers:
        - name: config-gen
          image: aladex/wg-ds-net-generator:0.0.4
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: wireguard-config
              mountPath: /config
            - mountPath: /wg-map.yaml
              subPath: wg-map.yaml
              name: wg-map
      containers:
        - name: wg-wireguard
          image: "ghcr.io/linuxserver/wireguard:v1.0.20210914-ls49"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
          env:
            - name: "INTERNAL_SUBNET"
              value: "10.13.13.0"
            - name: "SERVERPORT"
              value: "51820"
            - name: "PEERS"
              value: "smart,mikrotik"
            - name: "PEERDNS"
              value: "8.8.8.8"

          ports:
              - containerPort: 51820
                protocol: UDP
          volumeMounts:
            - name: wireguard-config
              mountPath: /config
            - name: modules
              mountPath: /lib/modules
      volumes:
        - name: wireguard-config
          hostPath:
            path: /opt/wg  # modify this to specify another path to store nfs share data
            type: DirectoryOrCreate
        - name: modules
          hostPath:
            path: /lib/modules  # modify this to specify another path to store nfs share data
            type: DirectoryOrCreate
        - name: wg-map
          configMap:
            name: wg-map